<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - E-Consultation Portal</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }

        .header {
            background: linear-gradient(90deg, #1e3c72 0%, #2a5298 100%);
            padding: 1.5rem;
            box-shadow: 0 4px 20px rgba(0,0,0,0.15);
        }

        .header-content {
            display: flex;
            align-items: center;
            justify-content: space-between;
            max-width: 1400px;
            margin: 0 auto;
        }

        .logo {
            display: flex;
            align-items: center;
            color: white;
            font-size: 1.8rem;
            font-weight: bold;
        }

        .logo::before {
            content: "üë®‚Äçüíº";
            margin-right: 15px;
            font-size: 2.5rem;
        }

        .admin-badge {
            background: rgba(255,255,255,0.2);
            padding: 8px 16px;
            border-radius: 20px;
            color: white;
            font-weight: 600;
            backdrop-filter: blur(10px);
        }

        .container {
            max-width: 1400px;
            margin: 2rem auto;
            padding: 0 1.5rem;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2.5rem;
        }

        .stat-card {
            background: linear-gradient(135deg, #74b9ff, #0984e3);
            color: white;
            padding: 2rem;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 10px 25px rgba(116, 185, 255, 0.3);
            transition: transform 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
        }

        .stat-card:nth-child(2) {
            background: linear-gradient(135deg, #fd79a8, #e84393);
            box-shadow: 0 10px 25px rgba(253, 121, 168, 0.3);
        }

        .stat-card:nth-child(3) {
            background: linear-gradient(135deg, #fdcb6e, #e17055);
            box-shadow: 0 10px 25px rgba(253, 203, 110, 0.3);
        }

        .stat-card:nth-child(4) {
            background: linear-gradient(135deg, #6c5ce7, #a29bfe);
            box-shadow: 0 10px 25px rgba(108, 92, 231, 0.3);
        }

        .stat-number {
            font-size: 3rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            font-size: 1.1rem;
            opacity: 0.9;
            font-weight: 500;
        }

        .dashboard-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            overflow: hidden;
            margin-bottom: 2rem;
        }

        .card-header {
            background: linear-gradient(45deg, #ff6b6b, #ee5a24);
            color: white;
            padding: 2rem;
            font-size: 1.5rem;
            font-weight: bold;
            position: relative;
            overflow: hidden;
        }

        .card-header::before {
            content: "";
            position: absolute;
            top: -50%;
            right: -50%;
            width: 100%;
            height: 100%;
            background: rgba(255,255,255,0.1);
            transform: rotate(45deg);
            transition: all 0.5s ease;
        }

        .card-header:hover::before {
            right: -30%;
        }

        .card-content {
            padding: 2.5rem;
        }

        .upload-section {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .form-group {
            margin-bottom: 2rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.8rem;
            font-weight: 700;
            color: #2d3436;
            font-size: 1.1rem;
        }

        .form-group input,
        .form-group textarea {
            width: 100%;
            padding: 15px;
            border: 3px solid #ddd;
            border-radius: 12px;
            font-size: 1rem;
            font-family: inherit;
            transition: all 0.3s ease;
        }

        .form-group input:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-group textarea {
            min-height: 150px;
            resize: vertical;
        }

        .upload-area {
            border: 3px dashed #ddd;
            border-radius: 15px;
            padding: 3rem;
            text-align: center;
            margin-bottom: 2rem;
            transition: all 0.3s ease;
            cursor: pointer;
            background: linear-gradient(135deg, #ffffff, #f8f9fa);
        }

        .upload-area:hover {
            border-color: #667eea;
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            transform: translateY(-2px);
        }

        .upload-area.dragover {
            border-color: #667eea;
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(102, 126, 234, 0.05));
            transform: scale(1.02);
        }

        .upload-icon {
            font-size: 4rem;
            color: #667eea;
            margin-bottom: 1.5rem;
            animation: float 3s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }

        .btn {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 12px;
            cursor: pointer;
            font-weight: 700;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            margin: 8px;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: "";
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }

        .btn-success {
            background: linear-gradient(45deg, #00b894, #00cec9);
        }

        .btn-success:hover {
            box-shadow: 0 8px 25px rgba(0, 184, 148, 0.4);
        }

        .btn-danger {
            background: linear-gradient(45deg, #e17055, #fd79a8);
        }

        .btn-danger:hover {
            box-shadow: 0 8px 25px rgba(225, 112, 85, 0.4);
        }

        .scheme-card {
            background: linear-gradient(135deg, #ffffff, #f8f9fa);
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 1.5rem;
            border-left: 6px solid #667eea;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }

        .scheme-card:hover {
            transform: translateX(10px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
        }

        .scheme-title {
            font-size: 1.4rem;
            font-weight: bold;
            color: #2d3436;
            margin-bottom: 0.8rem;
        }

        .scheme-date {
            color: #636e72;
            font-size: 1rem;
            margin-bottom: 1.5rem;
            font-weight: 500;
        }

        .scheme-actions {
            display: flex;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .comment-section {
            background: linear-gradient(135deg, #f1f2f6, #ddd6fe);
            border-radius: 12px;
            padding: 1.5rem;
            margin-top: 1.5rem;
        }

        .comment {
            background: white;
            padding: 1.5rem;
            border-radius: 10px;
            margin-bottom: 1rem;
            border-left: 4px solid #00b894;
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        }

        .comment-author {
            font-weight: bold;
            color: #2d3436;
            margin-bottom: 0.8rem;
            font-size: 1.1rem;
        }

        .comment-text {
            color: #636e72;
            line-height: 1.6;
            font-size: 1rem;
        }

        .comment-date {
            color: #b2bec3;
            font-size: 0.9rem;
            margin-top: 0.5rem;
        }

        .analysis-section {
            background: linear-gradient(135deg, #55a3ff, #003d82);
            color: white;
            padding: 2rem;
            border-radius: 15px;
            margin-top: 1.5rem;
            position: relative;
            overflow: hidden;
        }

        .analysis-section::before {
            content: "";
            position: absolute;
            top: -50%;
            right: -50%;
            width: 100%;
            height: 100%;
            background: rgba(255,255,255,0.05);
            transform: rotate(45deg);
        }

        .analysis-title {
            font-size: 1.4rem;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            font-weight: bold;
        }

        .analysis-title::before {
            content: "ü§ñ";
            margin-right: 15px;
            font-size: 2rem;
        }

        .analysis-content h4 {
            margin: 1.5rem 0 1rem 0;
            font-size: 1.2rem;
        }

        .analysis-content ul {
            margin-bottom: 1.5rem;
            padding-left: 25px;
        }

        .analysis-content li {
            margin-bottom: 0.8rem;
            line-height: 1.5;
        }

        .loading {
            display: inline-block;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .notification {
            position: fixed;
            top: 30px;
            right: 30px;
            background: #00b894;
            color: white;
            padding: 1.2rem 2rem;
            border-radius: 12px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.2);
            transform: translateX(100%);
            transition: transform 0.4s ease;
            z-index: 1000;
            font-weight: 600;
        }

        .notification.show {
            transform: translateX(0);
        }

        .notification.error {
            background: #e17055;
        }

        .empty-state {
            text-align: center;
            padding: 3rem;
            color: #636e72;
        }

        .empty-state-icon {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        .search-bar {
            background: white;
            border-radius: 25px;
            padding: 10px 20px;
            margin-bottom: 2rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .search-bar input {
            border: none;
            outline: none;
            width: 100%;
            padding: 10px;
            font-size: 1rem;
        }

        .filter-tabs {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .filter-tab {
            padding: 10px 20px;
            border: 2px solid #ddd;
            border-radius: 25px;
            background: white;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
        }

        .filter-tab.active {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border-color: transparent;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="header-content">
            <div class="logo">
                Admin Dashboard
            </div>
            <div class="admin-badge">
                Administrator Panel
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Statistics Section -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number" id="total-schemes">5</div>
                <div class="stat-label">Total Schemes</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="total-comments">23</div>
                <div class="stat-label">Total Comments</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="pending-analysis">3</div>
                <div class="stat-label">Pending Analysis</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="active-consultations">8</div>
                <div class="stat-label">Active Consultations</div>
            </div>
        </div>

        <!-- Upload New Scheme Section -->
        <div class="dashboard-card">
            <div class="card-header">
                üì§ Upload New Government Scheme
            </div>
            <div class="card-content">
                <div class="upload-section">
                    <div class="form-group">
                        <label for="scheme-title">Scheme Title</label>
                        <input type="text" id="scheme-title" placeholder="Enter comprehensive scheme title...">
                    </div>
                    
                    <div class="form-group">
                        <label for="scheme-description">Detailed Scheme Description</label>
                        <textarea id="scheme-description" placeholder="Provide detailed information about the scheme, its objectives, benefits, and implementation guidelines..."></textarea>
                    </div>

                    <div class="form-group">
                        <label for="scheme-category">Scheme Category</label>
                        <select id="scheme-category" style="width: 100%; padding: 15px; border: 3px solid #ddd; border-radius: 12px; font-size: 1rem;">
                            <option value="">Select Category</option>
                            <option value="digital">Digital India</option>
                            <option value="education">Education & Skill Development</option>
                            <option value="health">Healthcare</option>
                            <option value="environment">Environment & Green Energy</option>
                            <option value="agriculture">Agriculture</option>
                            <option value="infrastructure">Infrastructure</option>
                            <option value="social">Social Welfare</option>
                        </select>
                    </div>
                    
                    <div class="upload-area" onclick="document.getElementById('file-input').click()">
                        <div class="upload-icon">üìÑ</div>
                        <div>
                            <strong style="font-size: 1.2rem;">Click to upload scheme documents</strong>
                            <br><br>
                            <span style="color: #636e72; font-size: 1rem;">PDF, DOC, DOCX files supported ‚Ä¢ Maximum size: 10MB</span>
                        </div>
                        <input type="file" id="file-input" style="display: none;" accept=".pdf,.doc,.docx" multiple onchange="handleFileUpload(this)">
                    </div>
                    
                    <div style="text-align: center;">
                        <button class="btn" onclick="uploadScheme()">üöÄ Upload Scheme</button>
                        <button class="btn btn-danger" onclick="resetForm()">üîÑ Reset Form</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Comments Management Section -->
        <div class="dashboard-card">
            <div class="card-header">
                üí¨ Comments Management & AI Analysis
            </div>
            <div class="card-content">
                <div class="search-bar">
                    <input type="text" placeholder="üîç Search schemes, comments, or users..." onkeyup="searchComments(this.value)">
                </div>

                <div class="filter-tabs">
                    <div class="filter-tab active" onclick="filterComments('all')">All Schemes</div>
                    <div class="filter-tab" onclick="filterComments('with-comments')">With Comments</div>
                    <div class="filter-tab" onclick="filterComments('pending')">Pending Analysis</div>
                </div>

                <div id="admin-comments">
                    <!-- Comments will be populated here -->
                </div>
            </div>
        </div>
    </div>

    <div class="notification" id="notification"></div>

    <script>
        let schemes = [
            {
                id: 1,
                title: "Digital India Initiative 2025",
                description: "Comprehensive program to transform India into a digitally empowered society and knowledge economy through digital infrastructure, governance, and services.",
                category: "digital",
                date: "2025-09-20",
                comments: [
                    { 
                        author: "Rajesh Kumar", 
                        text: "This initiative should focus more on rural connectivity and digital literacy programs. Many villages still lack basic internet infrastructure.", 
                        date: "2025-09-21" 
                    },
                    { 
                        author: "Priya Singh", 
                        text: "Great initiative! But we need better cybersecurity measures for digital transactions. Also, the elderly population needs special training programs.", 
                        date: "2025-09-22" 
                    }
                ]
            },
            {
                id: 2,
                title: "National Skill Development Program",
                description: "National program to enhance employability through skill development, vocational training, and industry partnerships across multiple sectors.",
                category: "education",
                date: "2025-09-18",
                comments: [
                    { 
                        author: "Amit Patel", 
                        text: "The program should include more industry-relevant certifications and direct partnerships with leading companies for job placement.", 
                        date: "2025-09-19" 
                    }
                ]
            },
            {
                id: 3,
                title: "Green Energy Mission 2030",
                description: "Initiative to promote renewable energy sources, sustainable development, and achieve carbon neutrality through solar, wind, and other clean energy projects.",
                category: "environment",
                date: "2025-09-15",
                comments: [
                    { 
                        author: "Sunita Sharma", 
                        text: "Solar panel subsidies should be increased for residential installations. The current subsidy structure needs improvement.", 
                        date: "2025-09-16" 
                    },
                    { 
                        author: "Vikash Gupta", 
                        text: "Wind energy projects need better environmental impact assessments. We should also focus on energy storage solutions.", 
                        date: "2025-09-17" 
                    }
                ]
            },
            {
                id: 4,
                title: "Smart Healthcare Initiative",
                description: "Digital transformation of healthcare services through telemedicine, electronic health records, and AI-powered diagnostic tools.",
                category: "health",
                date: "2025-09-10",
                comments: []
            },
            {
                id: 5,
                title: "Agricultural Modernization Scheme",
                description: "Comprehensive program to modernize agricultural practices through technology, improved seeds, irrigation, and farmer education.",
                category: "agriculture",
                date: "2025-09-05",
                comments: []
            }
        ];

        let currentFilter = 'all';

        function handleFileUpload(input) {
            const files = Array.from(input.files);
            if (files.length > 0) {
                const uploadArea = document.querySelector('.upload-area');
                let fileList = files.map(file => `‚úÖ ${file.name}`).join('<br>');
                uploadArea.innerHTML = `
                    <div class="upload-icon">‚úÖ</div>
                    <div>
                        <strong style="color: #00b894;">Files ready for upload:</strong>
                        <br><br>
                        <div style="color: #636e72; font-size: 0.95rem;">
                            ${fileList}
                        </div>
                    </div>
                `;
            }
        }

        function uploadScheme() {
            const title = document.getElementById('scheme-title').value.trim();
            const description = document.getElementById('scheme-description').value.trim();
            const category = document.getElementById('scheme-category').value;
            
            if (!title || !description || !category) {
                showNotification('Please fill in all required fields', 'error');
                return;
            }

            const newScheme = {
                id: schemes.length + 1,
                title: title,
                description: description,
                category: category,
                date: new Date().toISOString().split('T')[0],
                comments: []
            };

            schemes.push(newScheme);
            updateStats();
            loadAdminComments();
            resetForm();
            showNotification('üéâ Scheme uploaded successfully and is now live for public consultation!', 'success');
        }

        function resetForm() {
            document.getElementById('scheme-title').value = '';
            document.getElementById('scheme-description').value = '';
            document.getElementById('scheme-category').value = '';
            
            document.querySelector('.upload-area').innerHTML = `
                <div class="upload-icon">üìÑ</div>
                <div>
                    <strong style="font-size: 1.2rem;">Click to upload scheme documents</strong>
                    <br><br>
                    <span style="color: #636e72; font-size: 1rem;">PDF, DOC, DOCX files supported ‚Ä¢ Maximum size: 10MB</span>
                </div>
            `;
        }

        function loadAdminComments() {
            const commentsContainer = document.getElementById('admin-comments');
            let filteredSchemes = schemes;

            // Apply filters
            if (currentFilter === 'with-comments') {
                filteredSchemes = schemes.filter(scheme => scheme.comments.length > 0);
            } else if (currentFilter === 'pending') {
                filteredSchemes = schemes.filter(scheme => scheme.comments.length > 0);
            }

            if (filteredSchemes.length === 0) {
                commentsContainer.innerHTML = `
                    <div class="empty-state">
                        <div class="empty-state-icon">üì≠</div>
                        <h3>No schemes found</h3>
                        <p>No schemes match your current filter criteria.</p>
                    </div>
                `;
                return;
            }

            let html = '';
            filteredSchemes.forEach(scheme => {
                html += `
                    <div class="scheme-card" data-scheme-id="${scheme.id}">
                        <div class="scheme-title">${scheme.title}</div>
                        <div class="scheme-date">üìÖ Posted: ${formatDate(scheme.date)} ‚Ä¢ Category: ${getCategoryLabel(scheme.category)}</div>
                        <p style="margin-bottom: 1.5rem; color: #636e72; line-height: 1.6;">${scheme.description}</p>
                        
                        <div class="scheme-actions">
                            <button class="btn btn-danger" onclick="deleteScheme(${scheme.id})">üóëÔ∏è Delete Scheme</button>
                            <button class="btn" onclick="viewSchemeDetails(${scheme.id})">üëÅÔ∏è View Details</button>
                        </div>

                        ${scheme.comments.length > 0 ? `
                            <div class="comment-section">
                                <h4 style="margin-bottom: 1.5rem; color: #2d3436;">üí¨ Public Comments (${scheme.comments.length})</h4>
                                ${scheme.comments.map(comment => `
                                    <div class="comment">
                                        <div class="comment-author">üë§ ${comment.author}</div>
                                        <div class="comment-text">${comment.text}</div>
                                        <div class="comment-date">üìÖ ${formatDate(comment.date)}</div>
                                    </div>
                                `).join('')}
                                <div style="text-align: center; margin-top: 1.5rem;">
                                    <button class="btn btn-success" onclick="analyzeComments(${scheme.id})">
                                        ü§ñ Generate AI Analysis
                                    </button>
                                </div>
                            </div>
                        ` : `
                            <div class="comment-section">
                                <div class="empty-state">
                                    <div class="empty-state-icon">üí≠</div>
                                    <h4>No comments yet</h4>
                                    <p>This scheme is waiting for public feedback.</p>
                                </div>
                            </div>
                        `}
                        <div id="analysis-${scheme.id}"></div>
                    </div>
                `;
            });

            commentsContainer.innerHTML = html;
        }

        function analyzeComments(schemeId) {
            const analysisDiv = document.getElementById(`analysis-${schemeId}`);
            
            // Show loading state
            analysisDiv.innerHTML = `
                <div class="analysis-section">
                    <div class="analysis-title">
                        <span class="loading">ü§ñ</span> Analyzing Comments with AI...
                    </div>
                    <p>Please wait while our advanced AI processes all the feedback and generates comprehensive insights...</p>
                </div>
            `;

            // Simulate AI processing time
            setTimeout(() => {
                const scheme = schemes.find(s => s.id === schemeId);
                const analysis = generateDetailedAnalysis(scheme);
                
                analysisDiv.innerHTML = `
                    <div class="analysis-section">
                        <div class="analysis-title">üéØ AI Analysis Results</div>
                        <div class="analysis-content" style="line-height: 1.7;">
                            <h4>üìä Executive Summary:</h4>
                            <p style="margin-bottom: 1.5rem;">${analysis.summary}</p>
                            
                            <h4>üîç Key Concerns Identified:</h4>
                            <ul style="margin-bottom: 1.5rem;">
                                ${analysis.concerns.map(concern => `<li>${concern}</li>`).join('')}
                            </ul>
                            
                            <h4>üí° Strategic Recommendations:</h4>
                            <ul style="margin-bottom: 1.5rem;">
                                ${analysis.recommendations.map(rec => `<li>${rec}</li>`).join('')}
                            </ul>

                            <h4>üìà Sentiment Analysis:</h4>
                            <p style="margin-bottom: 1rem;">${analysis.sentiment}</p>

                            <div style="text-align: center; margin-top: 2rem;">
                                <button class="btn" onclick="exportAnalysis(${schemeId})">üìã Export Report</button>
                                <button class="btn btn-success" onclick="implementRecommendations(${schemeId})">‚úÖ Mark as Reviewed</button>
                            </div>
                        </div>
                    </div>
                `;
            }, 3000);
        }

        function generateDetailedAnalysis(scheme) {
            const analyses = {
                1: {
                    summary: "The Digital India Initiative receives strong public support with 89% positive sentiment. Citizens appreciate the digital transformation vision but raise important concerns about implementation equity and security infrastructure.",
                    concerns: [
                        "Digital divide between urban and rural areas needs immediate attention",
                        "Cybersecurity infrastructure requires significant strengthening",
                        "Digital literacy programs need expansion for elderly and marginalized communities",
                        "Internet connectivity quality varies significantly across regions"
                    ],
                    recommendations: [
                        "Establish dedicated rural digital infrastructure development fund",
                        "Launch comprehensive cybersecurity awareness and protection programs",
                        "Create age-specific digital literacy curricula with local language support",
                        "Implement phased rollout with pilot programs in select rural districts",
                        "Develop public-private partnerships for sustainable digital ecosystem"
                    ],
                    sentiment: "Positive (89% approval) with constructive criticism focused on implementation challenges rather than concept rejection."
                },
                2: {
                    summary: "The National Skill Development Program shows 76% positive reception with stakeholders emphasizing the need for industry alignment and practical training components.",
                    concerns: [
                        "Gap between current curriculum and industry skill requirements",
                        "Limited partnerships with leading industry players",
                        "Lack of hands-on training facilities in tier-2 and tier-3 cities",
                        "Insufficient focus on emerging technology skills"
                    ],
                    recommendations: [
                        "Establish industry advisory boards for curriculum development",
                        "Create apprenticeship programs with major corporations",
                        "Set up mobile training units for remote area coverage",
                        "Include AI, blockchain, and green technology modules",
                        "Develop outcome-based training with job placement guarantees"
                    ],
                    sentiment: "Moderately positive (76% approval) with strong emphasis on practical implementation improvements."
                },
                3: {
                    summary: "Green Energy Mission 2030 receives overwhelming support (94% positive) with citizens showing high environmental consciousness and specific technical suggestions for improvement.",
                    concerns: [
                        "Current solar panel subsidies insufficient for middle-class adoption",
                        "Environmental impact assessments need more comprehensive frameworks",
                        "Energy storage solutions require immediate technological advancement",
                        "Grid integration challenges for renewable energy sources"
                    ],
                    recommendations: [
                        "Increase residential solar subsidies by 40% with flexible payment options",
                        "Develop standardized environmental impact assessment protocols",
                        "Invest in battery technology research and manufacturing",
                        "Upgrade power grid infrastructure for renewable energy integration",
                        "Create community-based renewable energy cooperatives"
                    ],
                    sentiment: "Highly positive (94% approval) with technical expertise evident in public feedback."
                }
            };

            return analyses[scheme.id] || {
                summary: "Mixed feedback received with various suggestions for improvement and stakeholder engagement.",
                concerns: ["Implementation timeline concerns", "Resource allocation optimization needed", "Stakeholder consultation requirements"],
                recommendations: ["Conduct detailed stakeholder mapping", "Develop phased implementation roadmap", "Establish regular monitoring and feedback mechanisms"],
                sentiment: "Neutral to positive with constructive feedback focus."
            };
        }

        function filterComments(filter) {
            currentFilter = filter;
            
            // Update active tab
            document.querySelectorAll('.filter-tab').forEach(tab => tab.classList.remove('active'));
            event.target.classList.add('active');
            
            loadAdminComments();
        }

        function searchComments(searchTerm) {
            // This would filter schemes based on search term
            // For demo purposes, we'll just reload
            loadAdminComments();
        }

        function deleteScheme(schemeId) {
            if (confirm('Are you sure you want to delete this scheme? This action cannot be undone.')) {
                schemes = schemes.filter(scheme => scheme.id !== schemeId);
                updateStats();
                loadAdminComments();
                showNotification('üóëÔ∏è Scheme deleted successfully', 'success');
            }
        }

        function viewSchemeDetails(schemeId) {
            const scheme = schemes.find(s => s.id === schemeId);
            alert(`Scheme Details:\n\nTitle: ${scheme.title}\nCategory: ${getCategoryLabel(scheme.category)}\nDate: ${scheme.date}\nComments: ${scheme.comments.length}\n\nDescription: ${scheme.description}`);
        }

        function exportAnalysis(schemeId) {
            showNotification('üìã Analysis report exported successfully!', 'success');
        }

        function implementRecommendations(schemeId) {
            showNotification('‚úÖ Scheme marked as reviewed and recommendations noted!', 'success');
        }

        function updateStats() {
            document.getElementById('total-schemes').textContent = schemes.length;
            document.getElementById('total-comments').textContent = schemes.reduce((total, scheme) => total + scheme.comments.length, 0);
            document.getElementById('pending-analysis').textContent = schemes.filter(scheme => scheme.comments.length > 0).length;
            document.getElementById('active-consultations').textContent = schemes.filter(scheme => new Date(scheme.date) > new Date(Date.now() - 30*24*60*60*1000)).length;
        }

        function showNotification(message, type = 'success') {
            const notification = document.getElementById('notification');
            notification.textContent = message;
            notification.className = `notification ${type === 'success' ? '' : 'error'} show`;
            
            setTimeout(() => {
                notification.classList.remove('show');
            }, 4000);
        }

        function formatDate(dateString) {
            const options = { year: 'numeric', month: 'long', day: 'numeric' };
            return new Date(dateString).toLocaleDateString('en-IN', options);
        }

        function getCategoryLabel(category) {
            const categories = {
                'digital': 'Digital India',
                'education': 'Education & Skill Development',
                'health': 'Healthcare',
                'environment': 'Environment & Green Energy',
                'agriculture': 'Agriculture',
                'infrastructure': 'Infrastructure',
                'social': 'Social Welfare'
            };
            return categories[category] || category;
        }

        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', () => {
            loadAdminComments();
            updateStats();
        });

        // Drag and drop functionality
        document.addEventListener('DOMContentLoaded', () => {
            const uploadArea = document.querySelector('.upload-area');
            
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                uploadArea.addEventListener(eventName, preventDefaults, false);
            });

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            ['dragenter', 'dragover'].forEach(eventName => {
                uploadArea.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                uploadArea.addEventListener(eventName, unhighlight, false);
            });

            function highlight(e) {
                uploadArea.classList.add('dragover');
            }

            function unhighlight(e) {
                uploadArea.classList.remove('dragover');
            }

            uploadArea.addEventListener('drop', handleDrop, false);

            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;
                
                if (files.length > 0) {
                    handleFileUpload({files: files});
                }
            }
        });

        // Auto-refresh stats every 30 seconds
        setInterval(() => {
            updateStats();
        }, 30000);
    </script>
</body>
</html>